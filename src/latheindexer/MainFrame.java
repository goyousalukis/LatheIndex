/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package latheindexer;

import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;

/**
 *
 * @author winsock
 */
public class MainFrame extends javax.swing.JFrame {
    static SerialPort serialPort;
    
    
 
    javax.swing.table.DefaultTableModel myModel = new javax.swing.table.DefaultTableModel (
            new Object [][] {
                {"Step Pulse", "$0", null},
                {"Step Idle Delay", "$1", null},
                {"Step Port Invert", "$2", null},
                {"Direction Port Invert", "$3", null},
                {"Step Enable Invert", "$4", null},
                {"Limit Pins Invert", "$5", null},
                {"Probe Pin Invert", "$6", null},
                {"Status Report Mask", "$10", null},
                {"Junction Deviation", "$11", null},
                {"Arc Tolerance", "$12", null},
                {"Report Inches", "$13", null},
                {"Soft Limits", "$20", null},
                {"Hard Limits", "$21", null},
                {"Homing Cycle", "$22", null},
                {"Homing Dir Invert", "$23", null},
                {"Homing Feed", "$24", null},
                {"Homing Seek", "$25", null},
                {"Homing Debounce", "$26", null},
                {"Homing Pull-off", "$27", null},
                {"Max Spindle Speed", "$30", null},
                {"Min Spindle Speed", "$31", null},
                {"Laser Mode", "$32", null},
                {"X Steps/mm", "$100", null},
                {"Y Steps/mm", "$101", null},
                {"Z Steps/mm", "$102", null},
                {"X Max Rate mm/min", "$110", null},
                {"Y Max Rate mm/min", "$111", null},
                {"Z Max Rate mm/mil", "$112", null},
                {"X Accel mm/sec^2", "$120", null},
                {"Y Accel mm/sec^2", "$121", null},
                {"Z Accel mm/sec^2", "$122", null},
                {"X Max Travel", "$130", null},      
                {"Y Max Travel", "$131", null},
                {"Z Max Travel", "$132", null}
                   
                
            },
            new String [] {
                "Description", "Code", "Value"
            }
        );
    
    //Object grblValues
    //private Preferences prefs;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        //prefs = Preferences.userRoot().node(this.getClass().getName());
        //Prefs = Preferences.userNodeForPackage(this.getClass());
        this.setPreferredSize(new Dimension(1200,1000));


        //myModel.addRow(new Object [] {"test","test","test"});
        //myModel.removeRow(1);
        initComponents();
        updateValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butGrpPhasing = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelMain = new javax.swing.JPanel();
        ctrlPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        butForward = new javax.swing.JButton();
        butReverse = new javax.swing.JButton();
        txtIndex = new javax.swing.JTextField();
        rbPhase0 = new javax.swing.JRadioButton();
        rbPhase1 = new javax.swing.JRadioButton();
        rbPhase2 = new javax.swing.JRadioButton();
        rbPhase3 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        platePanel = new javax.swing.JPanel();
        plateComponent2 = new latheindexer.plateComponent();
        butConnect = new javax.swing.JButton();
        butClose = new javax.swing.JButton();
        butUnlock = new javax.swing.JButton();
        panelOptions = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtRadius = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDivisions = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPhasing = new javax.swing.JTextField();
        txtPaneGRBL = new javax.swing.JScrollPane();
        txtAreaInfo = new javax.swing.JTextArea();
        butRefreshInfo = new javax.swing.JButton();
        butClear = new javax.swing.JButton();
        butPublish = new javax.swing.JButton();
        butProcessInfo = new javax.swing.JButton();
        jTextFieldLargePulley = new javax.swing.JTextField();
        jTextFieldSmallPulley = new javax.swing.JTextField();
        jTextFieldMicroSteps = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        panelTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableGRBL = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Divisions:");

        butForward.setText("Forward->");
        butForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butForwardActionPerformed(evt);
            }
        });

        butReverse.setText("Reverse<-");
        butReverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butReverseActionPerformed(evt);
            }
        });

        txtIndex.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        txtIndex.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIndex.setText("0");

        butGrpPhasing.add(rbPhase0);
        rbPhase0.setText("0");
        rbPhase0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPhase0ActionPerformed(evt);
            }
        });

        butGrpPhasing.add(rbPhase1);
        rbPhase1.setText("1");
        rbPhase1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPhase1ActionPerformed(evt);
            }
        });

        butGrpPhasing.add(rbPhase2);
        rbPhase2.setText("2");
        rbPhase2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPhase2ActionPerformed(evt);
            }
        });

        butGrpPhasing.add(rbPhase3);
        rbPhase3.setText("3");
        rbPhase3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPhase3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Phasing Control");

        javax.swing.GroupLayout ctrlPanelLayout = new javax.swing.GroupLayout(ctrlPanel);
        ctrlPanel.setLayout(ctrlPanelLayout);
        ctrlPanelLayout.setHorizontalGroup(
            ctrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctrlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ctrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIndex)
                    .addGroup(ctrlPanelLayout.createSequentialGroup()
                        .addGroup(ctrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(butForward)
                            .addComponent(butReverse)
                            .addComponent(jLabel5)
                            .addGroup(ctrlPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(ctrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbPhase0)
                                    .addComponent(rbPhase1)
                                    .addComponent(rbPhase2)
                                    .addComponent(rbPhase3))))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ctrlPanelLayout.setVerticalGroup(
            ctrlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctrlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butForward)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butReverse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbPhase0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbPhase1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbPhase2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbPhase3)
                .addContainerGap(360, Short.MAX_VALUE))
        );

        platePanel.setBackground(java.awt.Color.gray);

        plateComponent2.setBackground(java.awt.Color.white);
        plateComponent2.setForeground(new java.awt.Color(232, 239, 239));

        javax.swing.GroupLayout platePanelLayout = new javax.swing.GroupLayout(platePanel);
        platePanel.setLayout(platePanelLayout);
        platePanelLayout.setHorizontalGroup(
            platePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(platePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plateComponent2, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                .addContainerGap())
        );
        platePanelLayout.setVerticalGroup(
            platePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(platePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(plateComponent2, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );

        butConnect.setText("Open");
        butConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butConnectActionPerformed(evt);
            }
        });

        butClose.setText("Close");
        butClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCloseActionPerformed(evt);
            }
        });

        butUnlock.setText("Unlock GRBL");
        butUnlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUnlockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ctrlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(butConnect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butClose))
                    .addComponent(butUnlock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(platePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(platePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butConnect)
                    .addComponent(butClose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butUnlock)
                .addGap(85, 85, 85)
                .addComponent(ctrlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Main", panelMain);

        jLabel2.setText("Radius in pixels:");

        txtRadius.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRadius.setText("200");
        txtRadius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRadiusActionPerformed(evt);
            }
        });

        jLabel3.setText("Number of Divisions:");

        txtDivisions.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDivisions.setText("24");
        txtDivisions.setToolTipText("");
        txtDivisions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDivisionsActionPerformed(evt);
            }
        });

        jLabel4.setText("Phasing:");

        txtPhasing.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPhasing.setText("1");
        txtPhasing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhasingActionPerformed(evt);
            }
        });

        txtAreaInfo.setColumns(20);
        txtAreaInfo.setRows(5);
        txtPaneGRBL.setViewportView(txtAreaInfo);

        butRefreshInfo.setText("Refresh");
        butRefreshInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRefreshInfoActionPerformed(evt);
            }
        });

        butClear.setText("Clear");
        butClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butClearActionPerformed(evt);
            }
        });

        butPublish.setText("Publish");
        butPublish.setToolTipText("");
        butPublish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPublishActionPerformed(evt);
            }
        });

        butProcessInfo.setText("Process");
        butProcessInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butProcessInfoActionPerformed(evt);
            }
        });

        jLabel7.setText("Large Pulley:");

        jLabel8.setText("Small Pulley:");

        jLabel9.setText("MicroSteps:");

        javax.swing.GroupLayout panelOptionsLayout = new javax.swing.GroupLayout(panelOptions);
        panelOptions.setLayout(panelOptionsLayout);
        panelOptionsLayout.setHorizontalGroup(
            panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldSmallPulley, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldLargePulley, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRadius, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(txtDivisions, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPhasing, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMicroSteps))
                .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOptionsLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(butRefreshInfo)
                            .addComponent(butClear)
                            .addComponent(butPublish)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOptionsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butProcessInfo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPaneGRBL, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        panelOptionsLayout.setVerticalGroup(
            panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOptionsLayout.createSequentialGroup()
                .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOptionsLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDivisions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPhasing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldLargePulley, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSmallPulley, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMicroSteps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(panelOptionsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelOptionsLayout.createSequentialGroup()
                                .addComponent(butRefreshInfo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butPublish)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butProcessInfo))
                            .addComponent(txtPaneGRBL, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(256, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Options", panelOptions);

        tableGRBL.setModel(myModel);
        jScrollPane2.setViewportView(tableGRBL);

        javax.swing.GroupLayout panelTableLayout = new javax.swing.GroupLayout(panelTable);
        panelTable.setLayout(panelTableLayout);
        panelTableLayout.setHorizontalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(446, Short.MAX_VALUE))
        );
        panelTableLayout.setVerticalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("GRBL", panelTable);

        jPanel1.setBackground(new java.awt.Color(240, 134, 28));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        jLabel6.setText("Status:");

        txtStatus.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStatus))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Main");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateValues()
    {
        int tempRad = plateComponent2.getRadius();
        txtRadius.setText(Integer.toString(tempRad));
        int tempDiv = plateComponent2.getDivisions();
        txtDivisions.setText(Integer.toString(tempDiv));
        int tempPha = plateComponent2.getPhasing();
        txtPhasing.setText(Integer.toString(tempPha));
        int tempInd = plateComponent2.getIndex();
        txtIndex.setText(Integer.toString(tempInd));
        //butGrpPhasing.setSelected(m, rootPaneCheckingEnabled);
        int tempCurPhasing = plateComponent2.getCurPhase();
        if (tempCurPhasing == 0)
            rbPhase0.setSelected(true);
        if (tempCurPhasing == 1)
            rbPhase1.setSelected(true);
        if (tempCurPhasing == 2)
            rbPhase2.setSelected(true);
        if (tempCurPhasing == 3)
            rbPhase3.setSelected(true);
        txtAreaInfo.setText(plateComponent2.getInfo());
        //txtAreaInfo.setText("");
        
        
                
    }
    
    private void butForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butForwardActionPerformed

        int limit = plateComponent2.getDivisions();
        int index = plateComponent2.getIndex();
        index++;
        if (index == limit) index = 0;
        plateComponent2.setIndex(index);
        System.out.println(index);
        txtIndex.setText(Integer.toString(index));

    }//GEN-LAST:event_butForwardActionPerformed

    private void txtRadiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRadiusActionPerformed
        System.out.println("Changed");  
        int myRadius = Integer.parseInt(txtRadius.getText());
        System.out.println(myRadius);
        plateComponent2.setRadius(myRadius);
    }//GEN-LAST:event_txtRadiusActionPerformed

    private void txtDivisionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDivisionsActionPerformed
        System.out.println("Divisions Changed");  
        int myDivisions = Integer.parseInt(txtDivisions.getText());
        System.out.println(myDivisions);
        plateComponent2.setDivisions(myDivisions);
    }//GEN-LAST:event_txtDivisionsActionPerformed

    private void txtPhasingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhasingActionPerformed
        System.out.println("Phasing Changed");  
        int myPhasing = Integer.parseInt(txtPhasing.getText());
        System.out.println(myPhasing);
        plateComponent2.setPhasing(myPhasing);    

    }//GEN-LAST:event_txtPhasingActionPerformed

    private void butReverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butReverseActionPerformed
        
        int limit = plateComponent2.getDivisions();
        int index = plateComponent2.getIndex();
        index--;
        if (index < 0 ) index = limit -1;
        plateComponent2.setIndex(index);
        System.out.println(index);
        txtIndex.setText(Integer.toString(index));
    }//GEN-LAST:event_butReverseActionPerformed

    private void rbPhase0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPhase0ActionPerformed
        plateComponent2.setCurPhase(0);
    }//GEN-LAST:event_rbPhase0ActionPerformed

    private void rbPhase1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPhase1ActionPerformed
        plateComponent2.setCurPhase(1);
    }//GEN-LAST:event_rbPhase1ActionPerformed

    private void rbPhase2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPhase2ActionPerformed
    plateComponent2.setCurPhase(2);
    }//GEN-LAST:event_rbPhase2ActionPerformed

    private void rbPhase3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPhase3ActionPerformed
    plateComponent2.setCurPhase(3);
    }//GEN-LAST:event_rbPhase3ActionPerformed

    private void butConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butConnectActionPerformed
    if (serialPort == null) {
    serialPort = new SerialPort("/dev/ttyACM0");
        try {
            serialPort.openPort();
            serialPort.setParams(115200,8,1,0);
            System.out.println("Serial Port Opened");
            int mask = SerialPort.MASK_RXCHAR + SerialPort.MASK_CTS + SerialPort.MASK_DSR;//Prepare mask
            serialPort.setEventsMask(mask);//Set mask
            serialPort.addEventListener(new SerialPortReader());//Add SerialPortEventListener            
        }
        catch (SerialPortException ex) {
            System.out.println("Exception");
            System.out.println(ex);
        }}
    }//GEN-LAST:event_butConnectActionPerformed

    private void butCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCloseActionPerformed
        try {
            if (serialPort != null)
            {
                serialPort.closePort();
                serialPort = null;
            }
            
        }
        catch (SerialPortException ex) {
            System.out.println("Exception");
            System.out.println(ex);
        }
    }//GEN-LAST:event_butCloseActionPerformed

    private void butUnlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUnlockActionPerformed
        try {
            serialPort.writeString("$X\n");
            System.out.println("Wrote\n$X\n");
        }
        catch (SerialPortException ex) {
            System.out.println("Exception");
            System.out.println(ex);
        } 
    }//GEN-LAST:event_butUnlockActionPerformed

    private void butRefreshInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRefreshInfoActionPerformed
        try {
            serialPort.writeString("$$\n");
            System.out.println("Wrote\n$$\n");
            this.repaint();
            txtAreaInfo.setText(plateComponent2.getInfo());
        }
        catch (SerialPortException ex) {
            System.out.println("Exception");
            System.out.println(ex);
        }        
    }//GEN-LAST:event_butRefreshInfoActionPerformed

    private void butClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butClearActionPerformed
        plateComponent2.setInfo("XXX");
        txtAreaInfo.setText("");
        
    }//GEN-LAST:event_butClearActionPerformed

    private void butPublishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPublishActionPerformed
        System.out.println(plateComponent2.getInfo());        // TODO add your handling code here:
    }//GEN-LAST:event_butPublishActionPerformed

    private void butProcessInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butProcessInfoActionPerformed
        processInfo(plateComponent2.getInfo());
    }//GEN-LAST:event_butProcessInfoActionPerformed

    private void processInfo(String str)
    {
        System.out.println("Process Info");
        StringReader reader = new StringReader(str);
        BufferedReader br = new BufferedReader(reader);
        String line;
        String [] strInfo;
        try {
            while ((line=br.readLine())!=null)
            {

                if (line.indexOf('=')!=-1)
                {
                strInfo = line.split("=",2);
                System.out.println("***********");
                System.out.println(strInfo[0]);
                System.out.println(strInfo[1]);

            for(int i = 0; i < tableGRBL.getRowCount(); i++){//For each row
                if(tableGRBL.getModel().getValueAt(i, 1).equals(strInfo[0])){//Search the model
                            //System.out.println(tableGRBL.getModel().getValueAt(i, j));//Print if found string 
                            tableGRBL.getModel().setValueAt(strInfo[1],i,2);
                            System.out.println("FOUND!!!");
                            } 
                        }
                    }
                  
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
        
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butClear;
    private javax.swing.JButton butClose;
    private javax.swing.JButton butConnect;
    private javax.swing.JButton butForward;
    private javax.swing.ButtonGroup butGrpPhasing;
    private javax.swing.JButton butProcessInfo;
    private javax.swing.JButton butPublish;
    private javax.swing.JButton butRefreshInfo;
    private javax.swing.JButton butReverse;
    private javax.swing.JButton butUnlock;
    private javax.swing.JPanel ctrlPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldLargePulley;
    private javax.swing.JTextField jTextFieldMicroSteps;
    private javax.swing.JTextField jTextFieldSmallPulley;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelOptions;
    private javax.swing.JPanel panelTable;
    private latheindexer.plateComponent plateComponent2;
    private javax.swing.JPanel platePanel;
    private javax.swing.JRadioButton rbPhase0;
    private javax.swing.JRadioButton rbPhase1;
    private javax.swing.JRadioButton rbPhase2;
    private javax.swing.JRadioButton rbPhase3;
    private javax.swing.JTable tableGRBL;
    private javax.swing.JTextArea txtAreaInfo;
    private javax.swing.JTextField txtDivisions;
    private javax.swing.JTextField txtIndex;
    private javax.swing.JScrollPane txtPaneGRBL;
    private javax.swing.JTextField txtPhasing;
    private javax.swing.JTextField txtRadius;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables

 class SerialPortReader implements SerialPortEventListener {

    public void serialEvent(SerialPortEvent event) {
                
        if (event.getEventType() != 1) 
        {
        System.out.println("Event Type:" + event.getEventType());
        }
        if(event.isRXCHAR()){//If data is available
            if(event.getEventValue() != 0){//Check bytes count in the input buffer
                //Read data, if 10 bytes available 
                try {
                    byte buffer[] = serialPort.readBytes(event.getEventValue());
                    //System.out.println("Read Event: " + event.getEventValue());
                    String str = new String (buffer);
                    System.out.println(str);
                    System.out.println("Break");
                    plateComponent2.setInfo(str);
                    
                }
                catch (SerialPortException ex) {
                    System.out.println(ex);
                }
            }
        }
        else if(event.isCTS()){//If CTS line has changed state
            if(event.getEventValue() == 1){//If line is ON
                System.out.println("CTS - ON");
            }
            else {
                System.out.println("CTS - OFF");
            }
        }
        else if(event.isDSR()){///If DSR line has changed state
            if(event.getEventValue() == 1){//If line is ON
                System.out.println("DSR - ON");
            }
            else {
                System.out.println("DSR - OFF");
            }
        }
    }
}
    
    
}
